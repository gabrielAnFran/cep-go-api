basePath: /api/v1
definitions:
  HealthCheck:
    properties:
      status:
        example: available
        type: string
    type: object
  models.ErrorResponse:
    properties:
      cep:
        type: string
      error:
        type: string
    type: object
  models.TokenErrorResponse:
    properties:
      error:
        example: Ocorreu um erro ao gerar o token
        type: string
    type: object
  usecase.BuscarCepOutputDTO:
    properties:
      bairro:
        type: string
      cidade:
        type: string
      estado:
        type: string
      rua:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: antunes.f.gabriel@gmail.com
    name: API Support
  description: A API Desafio CEP fornece endpoints para buscar um CEP em um repositório,
    gerar um token JWT para autenticação e verificar a saúde da API. Com suporte a
    autenticação básica, a API oferece respostas em formato JSON e segue o padrão
    OpenAPI.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Desafio CEP API
  version: "1.0"
paths:
  /cep/{cep}:
    get:
      consumes:
      - application/json
      description: Busca um CEP em um repositório
      parameters:
      - description: CEP
        in: path
        name: cep
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.BuscarCepOutputDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Busca um CEP em um repositório
      tags:
      - CEP
  /gerar-token:
    post:
      consumes:
      - application/json
      description: Gera um token JWT para ser utilizado na requisicão de CEP
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.TokenErrorResponse'
      security:
      - BasicAuth: []
      summary: Gerar um token JWT
      tags:
      - Token
  /health-check:
    get:
      consumes:
      - application/json
      description: Verifica a saúde da API. Retornando se a mesma está no ar.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HealthCheck'
      security:
      - BasicAuth: []
      summary: Verifica a saúde da API.
      tags:
      - Health Check
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
