definitions:
  HealthCheck:
    properties:
      status:
        example: up
        type: string
    type: object
  models.CEPErrorResponse:
    properties:
      cep:
        example: "00000000"
        type: string
      error:
        example: CEP inválido
        type: string
    type: object
  models.TokenErrorResponse:
    properties:
      error:
        example: Ocorreu um erro ao gerar o token
        type: string
    type: object
  models.TokenLoginRequest:
    properties:
      email:
        example: email@email.com
        type: string
      senha:
        example: qualquerumamenosabre123
        type: string
    type: object
  usecase.BuscarCepOutputDTO:
    properties:
      bairro:
        example: Inhaúma
        type: string
      cidade:
        example: Rio de Janeiro
        type: string
      estado:
        example: RJ
        type: string
      rua:
        example: Rua José dos Reis
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: antunes.f.gabriel@gmail.com
    name: Suporte da API
  description: A API Desafio CEP fornece endpoints para buscar códigos postais (CEPs)
    em um repositório, gerar um token JWT para autenticação e verificar a saúde da
    API. Esta API suporta autenticação básica, retorna respostas em formato JSON e
    adere à Especificação OpenAPI.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API Desafio CEP
  version: "1.0"
paths:
  /cep/{cep}:
    get:
      consumes:
      - application/json
      description: Endpoint para buscar um CEP em um repositório
      parameters:
      - description: CEP a ser buscado
        in: path
        name: cep
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Retorna o CEP encontrado com sucesso
          schema:
            $ref: '#/definitions/usecase.BuscarCepOutputDTO'
        "400":
          description: Erro ao buscar o CEP
          schema:
            $ref: '#/definitions/models.CEPErrorResponse'
      summary: Buscar um CEP em um repositório
      tags:
      - CEP
  /gerar-token:
    post:
      consumes:
      - application/json
      description: Gera um token JWT para ser utilizado na requisicão de CEP
      parameters:
      - description: Token Login Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.TokenLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokenLoginRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.TokenErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.TokenErrorResponse'
      security:
      - BasicAuth: []
      summary: Gerar um token JWT
      tags:
      - Token
  /health-check:
    get:
      consumes:
      - application/json
      description: Verifica a saúde da API. Retornando se a mesma está no ar.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/HealthCheck'
      security:
      - BasicAuth: []
      summary: Verifica a saúde da API.
      tags:
      - Health Check
securityDefinitions:
  OAuth2:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
